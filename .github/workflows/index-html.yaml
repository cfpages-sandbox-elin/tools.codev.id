name: Update index.html from index.md

on:
  workflow_dispatch: # Manual trigger
  push:
    branches: [main]
    paths:
      - 'index.md' # Trigger only when index.md is modified

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install pandoc
        run: sudo apt-get update && sudo apt-get install -y pandoc

      - name: Check if index.md exists
        run: |
          if [ ! -f index.md ]; then
            echo "Error: index.md not found. Workflow cannot proceed."
            exit 1
          fi

      - name: Read index.md content
        id: read_markdown
        run: |
          MARKDOWN_CONTENT=$(cat index.md)
          echo "markdown_content<<EOF" >> "$GITHUB_OUTPUT"
          echo "$MARKDOWN_CONTENT" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"
          echo "index.md content (debug):"
          cat index.md

      - name: Convert Entire index.md to HTML
        id: convert_markdown
        run: |
          MARKDOWN_CONTENT="${{ steps.read_markdown.outputs.markdown_content }}"
          HTML_CONTENT=$(echo "$MARKDOWN_CONTENT" | pandoc -f markdown -t html --wrap=none)
          echo "html_content_output<<EOF" >> "$GITHUB_OUTPUT"
          echo "$HTML_CONTENT" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"
          echo "Generated HTML Content (debug):"
          echo "$HTML_CONTENT"

      - name: Replace index.html Content Section (Using awk - Finalized) # Finalized awk, targeting combined closing tag
        run: |
          HTML_CONTENT="${{ steps.convert_markdown.outputs.html_content_output }}"

          # Use awk to replace content section - targeting </div><!-- .entry-content --> closing tag
          awk -v html_content="$HTML_CONTENT" '
          /<div class="entry-content single-content">/ {
              print;
              print html_content;
              while (getline line < "index.html") { # Read lines from index.html
                if (line ~ /<\/div><!-- \.entry-content -->/) { # Check for combined closing tag+comment
                  print line; # Print the combined closing tag+comment line
                  break;      # Stop reading after finding closing tag
                }
              }
              next; # Skip default print action
          }
          { print }
          ' index.html > temp_index.html && mv temp_index.html index.html

          echo "index.html after content replacement (awk):"
          cat index.html

      - name: Update index.html title
        run: |
          sed -i "s|<title>CODEV.ID.*</title>|<title>Tools</title>|" index.html

      - name: Commit and Push updated index.html # <---- CORRECT COMMIT STEP - ONLY GIT COMMANDS - NO CHECKOUT
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions Bot"
          git add index.html
          git commit -m "feat: Update index.html content from index.md"
          git push origin main